{"ast":null,"code":"var _jsxFileName = \"/home/jhp/projects/personal-time-tracking-app/src/components/AddActivityDialog.tsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst AddActivityDialog = ({\n  open,\n  setList,\n  handleClose\n}) => {\n  const [inputValue, setInputValue] = React.useState('');\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Add Activity\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Enter Activity\",\n    placeholder: \"<number> [hr | hrs] #<tag> <activities>\",\n    type: \"text\",\n    onChange: event => setInputValue(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: () => {\n      handleClose();\n      setList(parseInputValue(inputValue));\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nfunction parseInputValue(input) {\n  const temp = input.split(\" \");\n  let count = 0;\n  let duration = '';\n  let tag = '';\n  let activityName = '';\n  temp.forEach(word => {\n    if (count === 0) {\n      if (word === 'hr' || word === 'hrs') {\n        count++;\n      } else {\n        duration += word;\n      }\n    } else if (count === 1) {\n      if (word[0] === '#') {\n        tag = word.slice(1);\n        count++;\n      }\n    } else if (count === 2) {\n      activityName += word + \" \";\n    }\n  });\n  return {\n    id: Math.random(),\n    duration: Number(duration),\n    tag,\n    activityName: activityName.trimEnd()\n  };\n}\n\nexport default AddActivityDialog;","map":{"version":3,"sources":["/home/jhp/projects/personal-time-tracking-app/src/components/AddActivityDialog.tsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","AddActivityDialog","open","setList","handleClose","inputValue","setInputValue","useState","event","target","value","parseInputValue","input","temp","split","count","duration","tag","activityName","forEach","word","slice","id","Math","random","Number","trimEnd"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AASA,MAAMC,iBAAmD,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AAC9F,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAApC;AAEA,SACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEL,IAAd;AAAoB,IAAA,OAAO,EAAEE,WAA7B;AAA0C,IAAA,QAAQ,EAAC,IAAnD;AAAwD,IAAA,SAAS,MAAjE;AAAkE,uBAAgB,mBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,KAAK,EAAC,gBAJR;AAKE,IAAA,WAAW,EAAC,yCALd;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,QAAQ,EAAGI,KAAD,IAAWF,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAPpC;AAQE,IAAA,SAAS,MARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAgBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrBA,MAAAA,WAAW;AACXD,MAAAA,OAAO,CAACQ,eAAe,CAACN,UAAD,CAAhB,CAAP;AACD,KAHD;AAGG,IAAA,KAAK,EAAC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAhBF,CADF;AA8BD,CAjCD;;AAmCA,SAASM,eAAT,CAAyBC,KAAzB,EAAuD;AACrD,QAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAb;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,YAAY,GAAG,EAAnB;AAEAL,EAAAA,IAAI,CAACM,OAAL,CAAaC,IAAI,IAAI;AACnB,QAAIL,KAAK,KAAK,CAAd,EAAiB;AACf,UAAIK,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAA9B,EAAqC;AACnCL,QAAAA,KAAK;AACN,OAFD,MAEO;AACLC,QAAAA,QAAQ,IAAII,IAAZ;AACD;AACF,KAND,MAMO,IAAIL,KAAK,KAAK,CAAd,EAAiB;AACtB,UAAIK,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACnBH,QAAAA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAW,CAAX,CAAN;AACAN,QAAAA,KAAK;AACN;AACF,KALM,MAKA,IAAIA,KAAK,KAAK,CAAd,EAAiB;AACtBG,MAAAA,YAAY,IAAIE,IAAI,GAAG,GAAvB;AACD;AACF,GAfD;AAiBA,SAAO;AACLE,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADC;AAELR,IAAAA,QAAQ,EAAES,MAAM,CAACT,QAAD,CAFX;AAGLC,IAAAA,GAHK;AAILC,IAAAA,YAAY,EAAEA,YAAY,CAACQ,OAAb;AAJT,GAAP;AAMD;;AAED,eAAezB,iBAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IActivityData } from '../types';\n\ninterface AddActivityDialogProps {\n  open: boolean;\n  setList: (input: IActivityData) => void;\n  handleClose: () => void;\n}\n\nconst AddActivityDialog: React.FC<AddActivityDialogProps> = ({ open, setList, handleClose }) => {\n  const [inputValue, setInputValue] = React.useState('');\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth='sm' fullWidth aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">\n        Add Activity \n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Enter Activity\"\n          placeholder=\"<number> [hr | hrs] #<tag> <activities>\"\n          type=\"text\"\n          onChange={(event) => setInputValue(event.target.value)}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={() => {\n          handleClose();\n          setList(parseInputValue(inputValue));\n        }} color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction parseInputValue(input: string): IActivityData {\n  const temp = input.split(\" \");\n  let count = 0;\n  let duration = '';\n  let tag = '';\n  let activityName = '';\n\n  temp.forEach(word => {\n    if (count === 0) {\n      if (word === 'hr' || word === 'hrs') {\n        count++;\n      } else {\n        duration += word;\n      }\n    } else if (count === 1) {\n      if (word[0] === '#') {\n        tag = word.slice(1);\n        count++;\n      }\n    } else if (count === 2) {\n      activityName += word + \" \";\n    }\n  });\n\n  return {\n    id: Math.random(),\n    duration: Number(duration),\n    tag,\n    activityName: activityName.trimEnd(),\n  } \n}\n\nexport default AddActivityDialog;"]},"metadata":{},"sourceType":"module"}