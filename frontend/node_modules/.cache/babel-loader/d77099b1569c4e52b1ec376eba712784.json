{"ast":null,"code":"var _jsxFileName = \"/home/jhp/projects/personal-time-tracking-app/src/components/ContentList/ContentListComponent.tsx\";\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\nimport EnhancedTableHead from './EnhancedTableHead';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nconst ContentListComponent = ({\n  activityList,\n  setList\n}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('activityName');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = activityList.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, activityList.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    selected: selected,\n    onDelete: () => setSelected([]),\n    setList: setList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: activityList.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, stableSort(activityList, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((activity, index) => {\n    const isItemSelected = isSelected(activity.id);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, activity.id),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: activity.id,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, activity.activityName), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, activity.tag), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, activity.duration));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10],\n    component: \"div\",\n    count: activityList.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })));\n};\n\nexport default ContentListComponent;","map":{"version":3,"sources":["/home/jhp/projects/personal-time-tracking-app/src/components/ContentList/ContentListComponent.tsx"],"names":["React","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Paper","Checkbox","EnhancedTableToolbar","EnhancedTableHead","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","useStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","ContentListComponent","activityList","setList","classes","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","id","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","activity","isItemSelected","labelId","activityName","tag","duration"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\nimport EnhancedTableHead from './EnhancedTableHead';\nimport { IActivityData } from '../../types';\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }),\n);\n\ninterface IContentListProps {\n  activityList: IActivityData[];\n  setList: (ids: number[]) => void;\n}\n\nconst ContentListComponent: React.FC<IContentListProps> = ({ activityList, setList }) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof IActivityData>('activityName');\n  const [selected, setSelected] = React.useState<number[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof IActivityData) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = activityList.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, id: number) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected: number[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id: number) => selected.indexOf(id) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, activityList.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar selected={selected} onDelete={() => setSelected([])} setList={setList}/>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size='medium'\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={activityList.length}\n            />\n            <TableBody>\n              {stableSort(activityList, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((activity, index) => {\n                  const isItemSelected = isSelected(activity.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, activity.id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={activity.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {activity.activityName}\n                      </TableCell>\n                      <TableCell>{activity.tag}</TableCell>\n                      <TableCell>{activity.duration}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10]}\n          component=\"div\"\n          count={activityList.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default ContentListComponent;\n"]},"metadata":{},"sourceType":"module"}