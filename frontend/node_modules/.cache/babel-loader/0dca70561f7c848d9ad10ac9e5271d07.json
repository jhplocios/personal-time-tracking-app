{"ast":null,"code":"var _jsxFileName = \"/home/jhp/projects/personal-time-tracking-app/src/components/ContentList/EnhancedTableHead.tsx\";\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nconst headCells = [{\n  id: 'activityName',\n  numeric: false,\n  disablePadding: true,\n  label: 'Activity Name'\n}, {\n  id: 'tag',\n  numeric: false,\n  disablePadding: false,\n  label: 'Tag'\n}, {\n  id: 'duration',\n  numeric: true,\n  disablePadding: false,\n  label: 'Duration (hrs)'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nexport default EnhancedTableHead;","map":{"version":3,"sources":["/home/jhp/projects/personal-time-tracking-app/src/components/ContentList/EnhancedTableHead.tsx"],"names":["React","createStyles","makeStyles","TableCell","TableHead","TableRow","TableSortLabel","Checkbox","useStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","property","event","map","headCell"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { IActivityData } from '../../types';\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof IActivityData;\n  label: string;\n  numeric: boolean;\n}\n\ntype Order = 'asc' | 'desc';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }),\n);\n\nconst headCells: HeadCell[] = [\n  { id: 'activityName', numeric: false, disablePadding: true, label: 'Activity Name' },\n  { id: 'tag', numeric: false, disablePadding: false, label: 'Tag' },\n  { id: 'duration', numeric: true, disablePadding: false, label: 'Duration (hrs)' },\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof IActivityData) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property: keyof IActivityData) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport default EnhancedTableHead;"]},"metadata":{},"sourceType":"module"}